# Application Settings
APP_NAME="Image Embedding Service"
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO

# Service Security
# Generate with: python -c "import secrets; print('emb_service_key_' + secrets.token_urlsafe(32))"
EMBEDDING_SERVICE_API_KEY=emb_service_key_change_this_to_secure_key

# Main Video Server API (requires DEV or ROOT role API key)
VIDEO_SERVER_BASE_URL=http://host.docker.internal:8000
VIDEO_SERVER_API_KEY=vsk_live_uYgoQg66IJfpK4mgkWXNDDusqbiI7KWieOliw0hXJrI

# Qdrant Vector Database
QDRANT_HOST=qdrant
QDRANT_PORT=6333
# QDRANT_API_KEY=your_qdrant_api_key  # Optional, for production
QDRANT_COLLECTION_NAME=evidence_embeddings
QDRANT_VECTOR_SIZE=512  # CLIP ViT-B-32 dimension

# Redis Configuration (for scheduler)
REDIS_HOST=host.docker.internal
REDIS_PORT=6379
REDIS_PASSWORD=videoserver_redis_password
REDIS_DATABASE=5  # Use DB 5 for embedding service

# Scheduler Configuration
SCHEDULER_ENABLED=true
EVIDENCE_CHECK_INTERVAL=600  # Check for new evidences every 10 minutes
EVIDENCE_BATCH_SIZE=50  # Process up to 50 evidences per batch
IMAGE_SEARCH_CHECK_INTERVAL=30  # Check for new searches every 30 seconds
IMAGE_SEARCH_BATCH_SIZE=10  # Process up to 10 searches per batch

# CLIP Model Configuration
CLIP_MODEL_NAME=ViT-B-32  # Options: ViT-B-32, ViT-B-16, ViT-L-14
CLIP_DEVICE=cpu  # Options: cpu, cuda
CLIP_BATCH_SIZE=32

# Image Processing
IMAGE_DOWNLOAD_TIMEOUT=30  # Timeout in seconds for downloading images
MAX_IMAGE_SIZE=10485760  # Max image size in bytes (10MB)
SUPPORTED_FORMATS=jpg,jpeg,png,webp

# Search Configuration
DEFAULT_SIMILARITY_THRESHOLD=0.75  # Default similarity threshold for searches
MAX_SEARCH_RESULTS=100  # Maximum number of results to return

# Worker Configuration
WORKER_CONCURRENCY=4  # Number of concurrent workers
WORKER_MAX_RETRIES=3  # Max retries for failed tasks
WORKER_RETRY_DELAY=60  # Delay between retries in seconds